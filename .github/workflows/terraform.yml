name: "Terraform AWS Deployment"

# Define when this workflow should run
on:
  workflow_dispatch:
    inputs:
      confirm_deploy:
        description: 'Type "DEPLOY" to confirm deployment'
        required: true
        type: string

# Global environment variables used throughout the workflow
env:
  AWS_REGION: eu-west-2       # AWS region for resource deployment
  TERRAFORM_DIR: ./terraform  # Location of Terraform files

# Permissions required for GitHub OIDC authentication with AWS
permissions:
  id-token: write  # Needed for AWS OIDC authentication
  contents: read   # Needed for repository access

# Jobs to be executed in this workflow
jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest    # Use latest Ubuntu runner
    if: github.event.inputs.confirm_deploy == 'DEPLOY'

    steps:
      # Step 1: Check out the repository code
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Set up AWS credentials using OIDC
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}  # IAM role to assume
          aws-region: ${{ env.AWS_REGION }}           # AWS region from env vars

      # Step 3: Install Terraform on the runner
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.5.0"  # Specify Terraform version

      # Step 4: Initialize Terraform working directory
      - name: Terraform Init
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: |
          terraform init
          # Verify state access
          echo "Checking Terraform state:"
          terraform state list || echo "No state found"

      # Step 5: Create Terraform plan
      - name: Terraform Plan
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: terraform plan -out=tfplan

      # Step 6: Apply Terraform changes
      - name: Terraform Apply
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: terraform apply -auto-approve tfplan